<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.binyu.dao.IUserDao">
    <!--配置 查询结果的列名和实体类的属性名的对应关系-->
    <resultMap id="userMap" type="com.binyu.domain.User">
        <id property="id" column="id"/>
        <result property="address" column="address"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="username" column="username"/>
    </resultMap>

    <resultMap id="userAccountMap" type="com.binyu.domain.User" >
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <result property="birthday" column="birthday"/>
        <collection property="accounts" ofType="com.binyu.domain.Account" javaType="list">
            <id property="id" column="ID"/>
            <result property="uid" column="UID"/>
            <result property="money" column="MONEY"/>
        </collection>
    </resultMap>
    <select id="findAll" resultMap="userMap">
        select * from user;
    </select>
    <insert id="saveUser" parameterType="com.binyu.domain.User">
        <!--配置插入操作后，。获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values (#{username},#{address},#{sex},#{birthday});
    </insert>
    <update id="updateUser" parameterType="com.binyu.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>
    <!--传入参数只有一个#{aaa}可以随便写-->
    <delete id="deleteUser" parameterType="integer">
        delete from user where id=#{userId}
    </delete>
    <select id="findById" parameterType="integer" resultType="com.binyu.domain.User">
        select * from user where id=#{userId}
    </select>
    <select id="findByName" parameterType="string" resultType="com.binyu.domain.User">
 select * from user where username like #{username};
 <!--以下方法有SQL注入问题，不常用-->
<!-- select * from user where username like '%${value}%' -->
    </select>
    <select id="findTotal" resultType="integer" >
        select count(id) from user;
    </select>
    <select id="findUserByVo" resultType="com.binyu.domain.User" parameterType="com.binyu.domain.QueryVo">
        select * from user where username like #{user.username};
    </select>
    <select id="findUserByCondition" resultType="com.binyu.domain.User" parameterType="com.binyu.domain.User">
        select * from user
        <where>
            <if test="username !=null">
                and  username=#{username}
            </if>
        </where>
    </select>
    <select id="findUserInIds" resultType="com.binyu.domain.User" parameterType="com.binyu.domain.QueryVo">
        select * from user
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open="and id in(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findAllUser" resultMap="userAccountMap">
         select * from `user`as u left outer join account as a  on u.id=a.UID;
    </select>
</mapper>